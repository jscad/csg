const test = require('ava')

const {arc} = require('./index')

const path2 = require('../geometry/path2')

const comparePoints = require('../../test/helpers/comparePoints')

test('arc (defaults)', t => {
  const exp = [
    [ 1, 0 ],
    [ 0.9324722290039062, 0.3612416684627533 ],
    [ 0.739008903503418, 0.6736956238746643 ],
    [ 0.4457383453845978, 0.8951632976531982 ],
    [ 0.09226836264133453, 0.9957341551780701 ],
    [ -0.2736629843711853, 0.9618256688117981 ],
    [ -0.602634608745575, 0.7980172038078308 ],
    [ -0.8502171635627747, 0.5264321565628052 ],
    [ -0.9829730987548828, 0.1837495118379593 ],
    [ -0.9829730987548828, -0.1837495118379593 ],
    [ -0.8502171635627747, -0.5264321565628052 ],
    [ -0.602634608745575, -0.7980172038078308 ],
    [ -0.2736629843711853, -0.9618256688117981 ],
    [ 0.09226836264133453, -0.9957341551780701 ],
    [ 0.4457383453845978, -0.8951632976531982 ],
    [ 0.739008903503418, -0.6736956238746643 ],
    [ 0.9324722290039062, -0.3612416684627533 ]
  ]
  const geometry = arc()
  const obs = path2.toPoints(geometry)

  t.deepEqual(obs.length, 17)
  t.true(comparePoints(obs, exp))
})

test('arc (options)', t => {
  // test center
  let exp = [
    [ 3, 2 ],
    [ 2.9324722290039062, 2.361241579055786 ],
    [ 2.739008903503418, 2.6736955642700195 ],
    [ 2.4457383155822754, 2.8951632976531982 ],
    [ 2.092268466949463, 2.995734214782715 ],
    [ 1.72633695602417, 2.9618256092071533 ],
    [ 1.3973653316497803, 2.7980172634124756 ],
    [ 1.1497828960418701, 2.5264320373535156 ],
    [ 1.0170269012451172, 2.1837494373321533 ],
    [ 1.0170269012451172, 1.8162504434585571 ],
    [ 1.1497828960418701, 1.4735678434371948 ],
    [ 1.3973653316497803, 1.2019827365875244 ],
    [ 1.72633695602417, 1.0381743907928467 ],
    [ 2.092268466949463, 1.0042657852172852 ],
    [ 2.4457383155822754, 1.1048367023468018 ],
    [ 2.739008903503418, 1.3263044357299805 ],
    [ 2.9324722290039062, 1.6387583017349243 ]
  ]
  let geometry = arc({center: [2,2]})
  let obs = path2.toPoints(geometry)

  t.deepEqual(obs.length, 17)
  t.true(comparePoints(obs, exp))

  // test radius
  exp = [
    [ 2, 0 ],
    [ 1.8649444580078125, 0.7224833369255066 ],
    [ 1.478017807006836, 1.3473912477493286 ],
    [ 0.8914766907691956, 1.7903265953063965 ],
    [ 0.18453672528266907, 1.9914683103561401 ],
    [ -0.5473259687423706, 1.9236513376235962 ],
    [ -1.20526921749115, 1.5960344076156616 ],
    [ -1.7004343271255493, 1.0528643131256104 ],
    [ -1.9659461975097656, 0.3674990236759186 ],
    [ -1.9659461975097656, -0.3674990236759186 ],
    [ -1.7004343271255493, -1.0528643131256104 ],
    [ -1.20526921749115, -1.5960344076156616 ],
    [ -0.5473259687423706, -1.9236513376235962 ],
    [ 0.18453672528266907, -1.9914683103561401 ],
    [ 0.8914766907691956, -1.7903265953063965 ],
    [ 1.478017807006836, -1.3473912477493286 ],
    [ 1.8649444580078125, -0.7224833369255066 ]
  ]
  geometry = arc({radius: 2})
  obs = path2.toPoints(geometry)

  t.deepEqual(obs.length, 17)
  t.true(comparePoints(obs, exp))

  // test startAngle
  exp = [
    [ 6.123234262925839e-17, 1 ],
    [ -0.35460489988327026, 0.9350162148475647 ],
    [ -0.6631226539611816, 0.7485107779502869 ],
    [ -0.8854560256004333, 0.4647231698036194 ],
    [ -0.9927088618278503, 0.1205366775393486 ],
    [ -0.9709418416023254, -0.23931565880775452 ],
    [ -0.8229838609695435, -0.5680647492408752 ],
    [ -0.5680647492408752, -0.8229838609695435 ],
    [ -0.23931565880775452, -0.9709418416023254 ],
    [ 0.1205366775393486, -0.9927088618278503 ],
    [ 0.4647231698036194, -0.8854560256004333 ],
    [ 0.7485107779502869, -0.6631226539611816 ],
    [ 0.9350162148475647, -0.35460489988327026 ],
    [ 1, -2.4492937051703357e-16 ]
  ]
  geometry = arc({startAngle: 90})
  obs = path2.toPoints(geometry)

  t.deepEqual(obs.length, 14)
  t.true(comparePoints(obs, exp))

  // test endAngle
  exp = [
    [ 1, 0 ],
    [ 0.9510565400123596, 0.30901700258255005 ],
    [ 0.80901700258255, 0.5877852439880371 ],
    [ 0.5877852439880371, 0.80901700258255 ],
    [ 0.30901700258255005, 0.9510565400123596 ],
    [ 6.123234262925839e-17, 1 ]
  ]
  geometry = arc({endAngle: 90})
  obs = path2.toPoints(geometry)

  t.deepEqual(obs.length, 6)
  t.true(comparePoints(obs, exp))

  // test makeTangent
  exp = [
    [ 1, 0 ],
    [ 0.9999619126319885, 0.008726535364985466 ],
    [ 0.9296630620956421, 0.3684109151363373 ],
    [ 0.7344967126846313, 0.678612232208252 ],
    [ 0.44067659974098206, 0.8976659178733826 ],
    [ 0.08766710758209229, 0.9961498379707336 ],
    [ -0.27711737155914307, 0.9608360528945923 ],
    [ -0.6046808958053589, 0.7964678406715393 ],
    [ -0.8510268330574036, 0.5251222252845764 ],
    [ -0.9830672740936279, 0.18324489891529083 ],
    [ -0.9830672740936279, -0.18324489891529083 ],
    [ -0.8510268330574036, -0.5251222252845764 ],
    [ -0.6046808958053589, -0.7964678406715393 ],
    [ -0.27711737155914307, -0.9608360528945923 ],
    [ 0.08766710758209229, -0.9961498379707336 ],
    [ 0.44067659974098206, -0.8976659178733826 ],
    [ 0.7344967126846313, -0.678612232208252 ],
    [ 0.9296630620956421, -0.3684109151363373 ],
    [ 0.9999619126319885, -0.008726535364985466 ]
  ]
  geometry = arc({makeTangent: true})
  obs = path2.toPoints(geometry)

  t.deepEqual(obs.length, 19)
  t.true(comparePoints(obs, exp))

  // test segments
  exp = [
    [ 1, 0 ],
    [ 0.7660444378852844, 0.6427876353263855 ],
    [ 0.1736481785774231, 0.9848077297210693 ],
    [ -0.5, 0.8660253882408142 ],
    [ -0.9396926164627075, 0.3420201539993286 ],
    [ -0.9396926164627075, -0.3420201539993286 ],
    [ -0.5, -0.8660253882408142 ],
    [ 0.1736481785774231, -0.9848077297210693 ],
    [ 0.7660444378852844, -0.6427876353263855 ]
  ]
  geometry = arc({segments: 8})
  obs = path2.toPoints(geometry)

  t.deepEqual(obs.length, 9)
  t.true(comparePoints(obs, exp))
})

test('arc (rotations)', t => {
  let exp = [
    [ 6.123234262925839e-17, 1 ],
    [ -0.30901700258255005, 0.9510565400123596 ],
    [ -0.5877852439880371, 0.80901700258255 ],
    [ -0.80901700258255, 0.5877852439880371 ],
    [ -0.9510565400123596, 0.30901700258255005 ],
    [ -1, 1.2246468525851679e-16 ]
  ]
  let geometry = arc({startAngle: 90, endAngle: 180})
  let obs = path2.toPoints(geometry)

  t.deepEqual(obs.length, 6)
  t.true(comparePoints(obs, exp))

  exp = [
    [ -1, 1.2246468525851679e-16 ],
    [ -0.9396926164627075, -0.3420201539993286 ],
    [ -0.7660444378852844, -0.6427876353263855 ],
    [ -0.5, -0.8660253882408142 ],
    [ -0.1736481785774231, -0.9848077297210693 ],
    [ 0.1736481785774231, -0.9848077297210693 ],
    [ 0.5, -0.8660253882408142 ],
    [ 0.7660444378852844, -0.6427876353263855 ],
    [ 0.9396926164627075, -0.3420201539993286 ],
    [ 1, -2.4492937051703357e-16 ]
  ]
  geometry = arc({startAngle: 180, endAngle: 360})
  obs = path2.toPoints(geometry)

  t.deepEqual(obs.length, 10)
  t.true(comparePoints(obs, exp))

  exp = [
    [ -1.8369701465288538e-16, -1 ],
    [ 0.3420201539993286, -0.9396926164627075 ],
    [ 0.6427876353263855, -0.7660444378852844 ],
    [ 0.8660253882408142, -0.5 ],
    [ 0.9848077297210693, -0.1736481785774231 ],
    [ 0.9848077297210693, 0.1736481785774231 ],
    [ 0.8660253882408142, 0.5 ],
    [ 0.6427876353263855, 0.7660444378852844 ],
    [ 0.3420201539993286, 0.9396926164627075 ],
    [ 3.0616169991140216e-16, 1 ]
  ]
  geometry = arc({startAngle: 270, endAngle: 90})
  obs = path2.toPoints(geometry)

  t.deepEqual(obs.length, 10)
  t.true(comparePoints(obs, exp))

  exp = [ [ -1.8369701465288538e-16, -1 ] ]
  geometry = arc({startAngle: 270, endAngle: 270.000000005})
  obs = path2.toPoints(geometry)

  t.deepEqual(obs.length, 1)
  t.true(comparePoints(obs, exp))
})
